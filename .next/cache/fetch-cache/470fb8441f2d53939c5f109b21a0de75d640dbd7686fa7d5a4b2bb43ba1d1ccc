{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=86400","cache-control":"public, max-age=7114","connection":"keep-alive","content-encoding":"gzip","content-type":"application/json;charset=utf-8","date":"Sun, 20 Apr 2025 14:23:10 GMT","etag":"W/\"d7ff46f218b6b0af6f2283304c745f84\"","server":"openresty","transfer-encoding":"chunked","vary":"Accept-Encoding,accept-encoding, Origin","via":"1.1 e8563dbee9a97c9ef688ad0d53cc9ddc.cloudfront.net (CloudFront)","x-amz-cf-id":"psXaxQXixZAcsoSbWfKx5QQa15ERxUUq57ttclHpNQyi3nXfY9_iaA==","x-amz-cf-pop":"KUL50-P1","x-cache":"Miss from cloudfront","x-memc":"HIT","x-memc-age":"20092","x-memc-expires":"7114","x-memc-key":"128b683ca3739dc8a77cf85ec038bc5f"},"body":"","status":200,"url":"https://api.themoviedb.org/3/tv/37854?api_key=6ad31d36e6a7a2531245c6e227d95e83"},"revalidate":31536000,"tags":[]}